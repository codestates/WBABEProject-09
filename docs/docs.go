// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/customer/menu": {
            "get": {
                "description": "menu data 조회를 위한 기능.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "call GetMenuControl, return menu data by []model.Menu",
                "parameters": [
                    {
                        "type": "string",
                        "description": "recommend, star, orderCount, date",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "리뷰 확인 여부",
                        "name": "checkReview",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Menu"
                            }
                        }
                    }
                }
            }
        },
        "/customer/menu/detail": {
            "get": {
                "description": "menu data 조회를 위한 기능.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "call GetMenuDetailControl, return menu data by []model.Menu",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Menu Id",
                        "name": "menuId",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Menu"
                            }
                        }
                    }
                }
            }
        },
        "/customer/order": {
            "get": {
                "description": "order data 조회를 위한 기능.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "call GetOrderControl, return order data by []model.Order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Order"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "주문자의 order data 수정을 위한 기능.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "call UpdateCustomerOrderControl, return result by json.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "{userId, orderDate, orderID , menu[{menuID, name}], phone, address}",
                        "name": "menu",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Order"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "order data 추가을 위한 기능.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "call InsertCustomerOrderControl, return result by json.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "{userId, menu[{menuID, name}], phone, address}",
                        "name": "menu",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Order"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/customer/order/review": {
            "get": {
                "description": "review data 확인을 위한 기능.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "call GetReviewControl, return result by []model.Review.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "정렬할 컬럼명",
                        "name": "sortBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Review"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "review data 수정을 위한 기능.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "call UpdateReviewControl, return result by json.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "{orderDay, orderId, star, content}",
                        "name": "menu",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Review"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "review data 추가을 위한 기능.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "call InsertReviewControl, return result by json.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "{orderDay, orderId, star, content}",
                        "name": "review",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Review"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Review"
                        }
                    }
                }
            },
            "delete": {
                "description": "review data 삭제를 위한 기능.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "call DeleteReviewControl, return result by json.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Order Day",
                        "name": "orderDay",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Order Id",
                        "name": "orderId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/owner/menu": {
            "get": {
                "description": "menu data 조회를 위한 기능.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "call GetMenuControl, return menu data by []model.Menu",
                "parameters": [
                    {
                        "type": "string",
                        "description": "recommend, star, orderCount, date",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "리뷰 확인 여부",
                        "name": "checkReview",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Menu"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "menu data 수정을 위한 기능.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "call UpdateMenuControl, return result by json.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Menu ID",
                        "name": "menuId",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "{category, name, price, recommend, orderState, orderDailyLimit}",
                        "name": "menu",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Menu"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "menu data 추가를 위한 기능.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "call InsertMenuControl, return menu data by model.Menu.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "{category, name, price, recommend, orderState, orderDailyLimit}",
                        "name": "menu",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Menu"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Menu"
                        }
                    }
                }
            },
            "delete": {
                "description": "menu data 삭제을 위한 기능.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "call DeleteMenuControl, return result by json.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Menu ID",
                        "name": "menuId",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/owner/menu/detail": {
            "get": {
                "description": "menu data 조회를 위한 기능.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "call GetMenuDetailControl, return menu data by []model.Menu",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Menu Id",
                        "name": "menuId",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Menu"
                            }
                        }
                    }
                }
            }
        },
        "/owner/order": {
            "get": {
                "description": "order data 조회를 위한 기능.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "call GetOrderControl, return order data by []model.Order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Order"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "오너가 order state 수정을 위한 기능.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "call UpdateOwnerOrderControl, return result by json.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "{orderDate, orderID , state}",
                        "name": "menu",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Order"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user": {
            "post": {
                "description": "user data 추가를 위한 기능.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "call InsertUserControl, return menu data by Json.",
                "parameters": [
                    {
                        "description": "{userId, name, email, phone, address, type}",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Menu": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "createAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "menuId": {
                    "type": "integer"
                },
                "modifyAt": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "orderCount": {
                    "type": "integer"
                },
                "orderDailyLimit": {
                    "type": "integer"
                },
                "orderState": {
                    "type": "integer"
                },
                "price": {
                    "type": "integer"
                },
                "recommend": {
                    "type": "boolean"
                },
                "reorderCount": {
                    "type": "integer"
                },
                "star": {
                    "type": "number"
                },
                "use": {
                    "type": "boolean"
                }
            }
        },
        "model.Order": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "createAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "menu": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.OrderMenu"
                    }
                },
                "modifyAt": {
                    "type": "string"
                },
                "orderDay": {
                    "type": "string"
                },
                "orderId": {
                    "type": "integer"
                },
                "phone": {
                    "type": "string"
                },
                "state": {
                    "type": "integer"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "model.OrderMenu": {
            "type": "object",
            "properties": {
                "menuId": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.Review": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "createAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "modifyAt": {
                    "type": "string"
                },
                "orderDay": {
                    "type": "string"
                },
                "orderId": {
                    "type": "integer"
                },
                "star": {
                    "type": "number",
                    "maximum": 5,
                    "minimum": 0
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "model.User": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "createAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "modifyAt": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                },
                "use": {
                    "type": "boolean"
                },
                "userId": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
